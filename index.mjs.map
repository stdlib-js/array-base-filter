{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'filter' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Returns a shallow copy of an array containing only those elements which pass a test implemented by a predicate function.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {Array} output array\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 1, -2, -3, 4 ];\n*\n* var out = internal( x, isPositive );\n* // returns [ 1, 4 ]\n*/\nfunction internal( x, predicate, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tv = x[ i ];\n\t\tif ( predicate.call( thisArg, v, i, x ) ) {\n\t\t\tout.push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n/**\n* Returns a shallow copy of an array containing only those elements which pass a test implemented by a predicate function.\n*\n* @private\n* @param {Object} x - input array object\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {Array} output array\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = arraylike2object( toAccessorArray( [ 1, -2, -3, 4 ] ) );\n*\n* var out = accessors( x, isPositive );\n* // returns [ 1, 4 ]\n*/\nfunction accessors( x, predicate, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar out;\n\tvar v;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tout = [];\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tv = get( data, i );\n\t\tif ( predicate.call( thisArg, v, i, data ) ) {\n\t\t\tout.push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a shallow copy of an array containing only those elements which pass a test implemented by a predicate function.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @returns {Collection} output array\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 1, -2, -3, 4 ];\n*\n* var out = filter( x, isPositive );\n* // returns [ 1, 4 ]\n*/\nfunction filter( x, predicate, thisArg ) {\n\tvar obj;\n\tif ( hasMethod( x, 'filter' ) ) {\n\t\treturn x.filter( predicate, thisArg );\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, predicate, thisArg );\n\t}\n\treturn internal( x, predicate, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default filter;\n"],"names":["filter","x","predicate","thisArg","obj","method","hasMethod","arraylike2object","accessorProtocol","data","get","out","v","i","accessors","length","call","push","internal"],"mappings":";;sGAgJA,SAASA,EAAQC,EAAGC,EAAWC,GAC9B,IAAIC,EACJ,OAvGD,SAAoBA,EAAKC,GACxB,MAAkC,mBAAlBD,EAAKC,EACtB,CAqGMC,CAAWL,EAAG,UACXA,EAAED,OAAQE,EAAWC,IAE7BC,EAAMG,EAAkBN,IACfO,iBA/CV,SAAoBP,EAAGC,EAAWC,GACjC,IAAIM,EACAC,EACAC,EACAC,EACAC,EAMJ,IAJAJ,EAAOR,EAAEQ,KACTC,EAAMT,EAAEa,UAAW,GAEnBH,EAAM,GACAE,EAAI,EAAGA,EAAIJ,EAAKM,OAAQF,IAC7BD,EAAIF,EAAKD,EAAMI,GACVX,EAAUc,KAAMb,EAASS,EAAGC,EAAGJ,IACnCE,EAAIM,KAAML,GAGZ,OAAOD,CACR,CA8BSG,CAAWV,EAAKF,EAAWC,GArFpC,SAAmBF,EAAGC,EAAWC,GAChC,IAAIQ,EACAC,EACAC,EAGJ,IADAF,EAAM,GACAE,EAAI,EAAGA,EAAIZ,EAAEc,OAAQF,IAC1BD,EAAIX,EAAGY,GACFX,EAAUc,KAAMb,EAASS,EAAGC,EAAGZ,IACnCU,EAAIM,KAAML,GAGZ,OAAOD,CACR,CA0EQO,CAAUjB,EAAGC,EAAWC,EAChC"}